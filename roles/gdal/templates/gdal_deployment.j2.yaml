apiVersion: apps/v1
kind: Deployment
metadata:
  name: gdal
spec:
  replicas: 1
  selector:
    matchLabels:
       app: gdal
  template:
    metadata:
      labels:
        app: gdal
    spec:
      containers:
        - name: gdal
{% if repository is undefined %}
          image: 'gdal:{{ image_version }}'
{% else %}
          image: '{{ repository }}/gdal:{{ image_version }}'
{% endif %}
          env:
          ## PG Environment variables
          - name: PGHOST
            value: postgres
          - name: PGPORT
            value: '5432'
          - name: PGDATABASE
            value: postgres
          - name: OPSDATABASE
            value: ops
          - name: PGUSER
            value: postgres
          - name: PGPASSWORD
            valueFrom:
              secretKeyRef:
                name: pg-secret
                key: PGPASSWORD
          - name: DOWNLOAD_FOLDER
            value: './download'
          - name: LOG_LEVEL
            value: SILLY
          - name: PYTHONPATH
            value: /opt/cobra-python-packages
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 80
          command: ["python3", "main.py"]
          volumeMounts:
            - mountPath: /opt/cobra-python-packages
              name: devlibs
            - mountPath: /download
              name: download
            - mountPath: /export
              name: export
      volumes:
        - name: devlibs
          hostPath:
            path: {{ local_lib_path }}/python
            type: DirectoryOrCreate
        - name: download
          persistentVolumeClaim:
            claimName: download-claim
        - name: export
          persistentVolumeClaim:
            claimName: export-claim
 
