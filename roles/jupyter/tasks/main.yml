---
# tasks file for jupyter
- name: Create Image File folder 
  file:
    path: '{{ image_files }}/jupyter'
    state: directory
- name: Render Jupyer Image
  template:
    src: Dockerfile.j2
    dest: '{{ image_files }}/jupyter/Dockerfile'
#- name: Build Jupyter Image
#  docker_image:
#    name: gisjupyter
#    tag: '1'
#    build:
#      path: '{{ image_files }}/jupyter/'
#    source: build
- name: Render Jupyter Storage Definition
  template:
    src: jupyter_storage.j2.yaml
    dest: '{{ manifest_folder }}/jupyter_storage.yaml'
- name: Create Storage
  shell:
    cmd: 'kubectl create -f jupyter_storage.yaml -n {{ gisnamespace }}'
    chdir: '{{ manifest_folder }}'
  ignore_errors: true
- name: Build Jupyter Image
  shell:
    cmd: docker image build . -t gisjupyter
    chdir: '{{ image_files }}/jupyter'
- name: Render Jupyter Manifest
  template:
    src: jupyter_deployment.j2.yaml
    dest: '{{ manifest_folder }}/jupyter_deployment.yaml'
- name: Remove Jupyter Deployment
  shell:
    cmd: 'kubectl delete -f jupyter_deployment.yaml -n {{ gisnamespace }}'
    chdir: '{{ manifest_folder }}'
  ignore_errors: true
- name: Create Jupyter Deployment
  shell:
    cmd: 'kubectl create -f jupyter_deployment.yaml -n {{ gisnamespace }}'
    chdir: '{{ manifest_folder }}'
  ignore_errors: true
- name: Render Jupyter Service
  template:
    src: jupyter_service.j2.yaml
    dest: '{{ manifest_folder }}/jupyter_service.yaml'
- name: Create Jupyter Service
  shell:
    cmd: 'kubectl create -f jupyter_service.yaml -n {{ gisnamespace }}'
    chdir: '{{ manifest_folder }}'
  ignore_errors: true